/**
 * An object with arbitrary string-indexed values of a generic type.
 *
 * @typedef {Object<string, T>} Dictionary<T>
 */
/**
 * An object with arbitrary string-indexed values of any type.
 *
 * @typedef {Dictionary<any>} AnyDictionary
 */
/**
 * Any valid JSON value.
 *
 * @typedef {boolean|number|string|null|JsonArray|JsonMap} AnyJson
 */
/**
 * Any JSON-compatible object.
 *
 * @typedef {Dictionary<AnyJson>} JsonMap
 */
/**
 * Any JSON-compatible array.
 *
 * @typedef {Array<AnyJson>} JsonArray
 */
export interface Dictionary<T> {
    [key: string]: T;
}
export declare type AnyDictionary = Dictionary<any>;
export declare type AnyJson = boolean | number | string | null | JsonArray | JsonMap;
export interface JsonMap {
    [key: string]: AnyJson;
}
export interface JsonArray extends Array<AnyJson> {
}
